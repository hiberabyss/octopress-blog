<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: git | 蛰渊-成长的轨迹]]></title>
  <link href="http://hiberabyss.github.io/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://hiberabyss.github.io/"/>
  <updated>2013-08-27T14:02:17+08:00</updated>
  <id>http://hiberabyss.github.io/</id>
  <author>
    <name><![CDATA[hiberabyss]]></name>
    <email><![CDATA[liuhb90@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[git总结]]></title>
    <link href="http://hiberabyss.github.io/blog/20130626/git-summary/"/>
    <updated>2013-06-26T23:00:00+08:00</updated>
    <id>http://hiberabyss.github.io/blog/20130626/git-summary</id>
    <content type="html"><![CDATA[<p>记录一些很常用的git配置和git命令使用方法，本着够用即可的原则。</p>

<!--more-->

<h2 id="git">git初始化设置</h2>
<p>设置全局用户名和邮箱，存储在<code>~/.gitconfig</code>文件中。</p>

<p><code>bash
git config --global user.name "My Name"
git config --global user.email "my@email.com"
</code></p>

<p>或者对单独的<code>Repo</code>进行设置，存储在<code>.git/config</code>文件中</p>

<p><code>bash
cd dir
git config user.name "My Name"
git config user.email "my@email.com"
</code></p>

<p>配置终端颜色显示</p>

<p><code>bash
git config −−global color.diff auto
git config −−global color.status auto
git config −−global color.branch auto
</code></p>

<h2 id="gitpushgithub">创建本地git仓库并push到github</h2>

<p><code>bash
mkdir project
cd project
git init
git add .
#会自动创建master分支，进行完commit操作后才能新建别的分支
git commit −am 'comment message '  #-a会自动添加被修改的文件
#git@github使用的是ssh连接，还可以使用https://github.com/username/project.git
git remote add origin git@github.com:username/yourrepo.git
#把本地分支push到远程服务器，--tags选项会把本地的tags标签也上传
git push origin remote_branch --tags
#更一般的情况，把local_branch本地分支上传到remote_branch分支
git push origin [local_branch]:remote_branch
</code>
当使用<code>SSH</code>的连接方式时，参考<a href="https://help.github.com/articles/generating-ssh-keys">这篇文章</a>在<code>github</code>网站上添加<code>SSH key</code>，这样在进行数据传输时就不需要再输入用户名和密码了。</p>

<h2 id="section">从远程分支获取内容</h2>

<p><code>bash
git clone -b branch remote_url
</code></p>

<h2 id="section-1">关于分支的一些操作</h2>
<p><code>bash
#查看当前已有分支及默认的分支
git branch
#创建一个本地分支
git branch local_branch
#切换默认分支
git checkout branch
#删除一个远程的分支，相当于把本地一个不存在的分支push到远程分支中
git push origin :remote_branch
</code></p>

<h2 id="section-2">标签</h2>
<p>可以对一些版本加标签</p>

<p><code>bash
#commit is the checksum value to add tag to previous version
git tag −a tagname −m 'message ' &lt;commit &gt;
</code></p>

<h2 id="section-3">文件过滤</h2>
<p>在相应的目录中新建<code>.gitignore</code>文件，<code>~/.gitignore</code>文件作用于全局</p>

<p><code>bash
#this is comments. To see detail, execute 'git help ignore '
hello.c
*.o
!foo.o
#to include foo.o which is excluded by *.o.
\!important!.o
#to exclude file whose name begin with !.
</code></p>

<h2 id="git-1">创建一个本地git共享仓库</h2>

<p><code>bash
cd ~/git/project
git init --bare
cd ~/project
git remote add orig ~/git/project
git push orig master
</code></p>

<ul>
  <li><a href="http://help.jianguoyun.com/?p=894">参考–坚果云</a></li>
</ul>

<h2 id="section-4">其他常用命令</h2>

<p><code>bash
#查看详细的帮助文档
git help command
#删除文件
git rm
git status
git log
#将服务器端更改同步到本地
git pull
</code></p>

<h2 id="section-5">参考资料</h2>
<ul>
  <li><a href="http://wlog.cn/soft/git-quick-start.html">git学习笔记</a></li>
</ul>
]]></content>
  </entry>
  
</feed>
