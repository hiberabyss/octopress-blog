<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Grub | 蛰渊-成长的轨迹]]></title>
  <link href="http://hiberabyss.github.io/blog/categories/grub/atom.xml" rel="self"/>
  <link href="http://hiberabyss.github.io/"/>
  <updated>2013-07-12T10:07:56+08:00</updated>
  <id>http://hiberabyss.github.io/</id>
  <author>
    <name><![CDATA[hiberabyss]]></name>
    <email><![CDATA[liuhb90@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[利用Grub2安装启动操作系统]]></title>
    <link href="http://hiberabyss.github.io/blog/20130712/grub/"/>
    <updated>2013-07-12T09:28:00+08:00</updated>
    <id>http://hiberabyss.github.io/blog/20130712/grub</id>
    <content type="html"><![CDATA[<p>本文介绍如何利用<code>Grub2</code>进行操作系统的启动、安装等。</p>

<!--more-->

<h2 id="ubuntu">安装Ubuntu</h2>

<p><code>
menuentry 'Install Ubuntu' --hotkey='i' {
    set isofile="/iso/ubuntu.iso"
    search --set=root -f $isofile --hint (hd0,1)
    loopback loop $isofile
    linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$isofile noprompt noeject
    initrd (loop)/casper/initrd.lz
}
</code></p>

<h2 id="isocentos">利用iso安装CentOS操作系统</h2>
<p>复制iso文件根目录下<code>images</code>文件夹到U盘根目录，复制<code>isolinux</code>文件夹到U盘根目录（并非必须，可以利用grub2挂载iso文件后进行使用，但直接复制到u盘可以不用指定iso文件名，要方便很多），复制iso文件到U盘根目录。</p>

<p>iso文件和<code>images</code>文件夹需要在同一分区，需要把该分区格式化为<code>fat32</code>或<code>ext#</code>格式，因为CentOS6.3安装时不支持ntfs格式分区。</p>

<p>安装时只需加载内核和初始文件系统即可，在安装界面选择<code>images</code>文件夹所在的分区。如果在安装过程中提示<code>未找到images#</code>之类的错误，则可能是没有找到iso文件，按<a-f2>切换到`anaconda`字符界面，手动加载iso文件所在的分区到`/mnt/isodir`目录。</a-f2></p>

<p>具体的启动配置文件见示例<code>grub.cfg</code>文件。</p>

<p>PS：抽时间研究一下<code>anaconda</code>，以及如何利用<code>http</code>、<code>ftp</code>网络安装的方式安装操作系统。</p>

<h2 id="memdiskwinpe">利用memdisk启动WinPE</h2>

<p><code>
menuentry 'Win7PE' {
  MEMDISK_LOC="/boot/memdisk"
  search --set=root -f $MEMDISK_LOC --hint (hd0,1)
  echo 'Loading Memdisk...'
  insmod memdisk
  linux16 /boot/memdisk iso raw
  echo 'Loading PE...'
  initrd16 /iso/WIN7PE.ISO
}
</code></p>

<h2 id="linux">启动Linux</h2>
<p>需要先利用<code>linux</code>指定内核文件，该文件一般以<code>vmlinuz</code>开头，注意加上<code>root=/dev/sda3</code>之类的内核参数，指定根分区；然后利用<code>initrd</code>指定初始文件系统，该文件一般以<code>initrd</code>开头。</p>

<h2 id="grubcfggrub2">示例grub.cfg配置文件（grub2）</h2>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>mydata/grub/grub.cfg </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
<span class='line-number'>325</span>
<span class='line-number'>326</span>
<span class='line-number'>327</span>
<span class='line-number'>328</span>
<span class='line-number'>329</span>
<span class='line-number'>330</span>
<span class='line-number'>331</span>
<span class='line-number'>332</span>
<span class='line-number'>333</span>
<span class='line-number'>334</span>
<span class='line-number'>335</span>
<span class='line-number'>336</span>
<span class='line-number'>337</span>
<span class='line-number'>338</span>
<span class='line-number'>339</span>
<span class='line-number'>340</span>
<span class='line-number'>341</span>
<span class='line-number'>342</span>
<span class='line-number'>343</span>
<span class='line-number'>344</span>
<span class='line-number'>345</span>
<span class='line-number'>346</span>
<span class='line-number'>347</span>
<span class='line-number'>348</span>
<span class='line-number'>349</span>
<span class='line-number'>350</span>
<span class='line-number'>351</span>
<span class='line-number'>352</span>
<span class='line-number'>353</span>
<span class='line-number'>354</span>
<span class='line-number'>355</span>
<span class='line-number'>356</span>
<span class='line-number'>357</span>
<span class='line-number'>358</span>
<span class='line-number'>359</span>
<span class='line-number'>360</span>
<span class='line-number'>361</span>
<span class='line-number'>362</span>
<span class='line-number'>363</span>
<span class='line-number'>364</span>
<span class='line-number'>365</span>
<span class='line-number'>366</span>
<span class='line-number'>367</span>
<span class='line-number'>368</span>
<span class='line-number'>369</span>
<span class='line-number'>370</span>
<span class='line-number'>371</span>
<span class='line-number'>372</span>
<span class='line-number'>373</span>
<span class='line-number'>374</span>
<span class='line-number'>375</span>
<span class='line-number'>376</span>
<span class='line-number'>377</span>
<span class='line-number'>378</span>
<span class='line-number'>379</span>
<span class='line-number'>380</span>
<span class='line-number'>381</span>
<span class='line-number'>382</span>
<span class='line-number'>383</span>
<span class='line-number'>384</span>
<span class='line-number'>385</span>
<span class='line-number'>386</span>
<span class='line-number'>387</span>
<span class='line-number'>388</span>
<span class='line-number'>389</span>
<span class='line-number'>390</span>
<span class='line-number'>391</span>
<span class='line-number'>392</span>
<span class='line-number'>393</span>
<span class='line-number'>394</span>
<span class='line-number'>395</span>
<span class='line-number'>396</span>
<span class='line-number'>397</span>
<span class='line-number'>398</span>
<span class='line-number'>399</span>
<span class='line-number'>400</span>
<span class='line-number'>401</span>
<span class='line-number'>402</span>
<span class='line-number'>403</span>
<span class='line-number'>404</span>
<span class='line-number'>405</span>
<span class='line-number'>406</span>
<span class='line-number'>407</span>
<span class='line-number'>408</span>
<span class='line-number'>409</span>
<span class='line-number'>410</span>
<span class='line-number'>411</span>
<span class='line-number'>412</span>
<span class='line-number'>413</span>
<span class='line-number'>414</span>
<span class='line-number'>415</span>
<span class='line-number'>416</span>
<span class='line-number'>417</span>
<span class='line-number'>418</span>
<span class='line-number'>419</span>
<span class='line-number'>420</span>
<span class='line-number'>421</span>
<span class='line-number'>422</span>
<span class='line-number'>423</span>
<span class='line-number'>424</span>
<span class='line-number'>425</span>
<span class='line-number'>426</span>
<span class='line-number'>427</span>
<span class='line-number'>428</span>
<span class='line-number'>429</span>
<span class='line-number'>430</span>
<span class='line-number'>431</span>
<span class='line-number'>432</span>
<span class='line-number'>433</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'>	<span class="err">require</span> <span class="err">&quot;rubygems&quot;</span>
</span><span class='line'><span class="err">require</span> <span class="err">&quot;bundler/setup&quot;</span>
</span><span class='line'><span class="err">require</span> <span class="err">&quot;stringex&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## -- Rsync Deploy config -- ##</span>
</span><span class='line'><span class="c1"># Be sure your public key is listed in your server&#39;s ~/.ssh/authorized_keys file</span>
</span><span class='line'><span class="na">ssh_user</span>       <span class="o">=</span> <span class="s">&quot;user@domain.com&quot;</span>
</span><span class='line'><span class="na">ssh_port</span>       <span class="o">=</span> <span class="s">&quot;22&quot;</span>
</span><span class='line'><span class="na">document_root</span>  <span class="o">=</span> <span class="s">&quot;~/website.com/&quot;</span>
</span><span class='line'><span class="na">rsync_delete</span>   <span class="o">=</span> <span class="s">false</span>
</span><span class='line'><span class="na">rsync_args</span>     <span class="o">=</span> <span class="s">&quot;&quot;  # Any extra arguments to pass to rsync</span>
</span><span class='line'><span class="na">deploy_default</span> <span class="o">=</span> <span class="s">&quot;push&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># This will be configured for you when you run config_deploy</span>
</span><span class='line'><span class="na">deploy_branch</span>  <span class="o">=</span> <span class="s">&quot;master&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## -- Misc Configs -- ##</span>
</span><span class='line'>
</span><span class='line'><span class="na">public_dir</span>      <span class="o">=</span> <span class="s">&quot;public&quot;    # compiled site directory</span>
</span><span class='line'><span class="na">source_dir</span>      <span class="o">=</span> <span class="s">&quot;source&quot;    # source file directory</span>
</span><span class='line'><span class="na">blog_index_dir</span>  <span class="o">=</span> <span class="s">&#39;source&#39;    # directory for your blog&#39;s index page (if you put your index in source/blog/index.html, set this to &#39;source/blog&#39;)</span>
</span><span class='line'><span class="na">deploy_dir</span>      <span class="o">=</span> <span class="s">&quot;_deploy&quot;   # deploy directory (for Github pages deployment)</span>
</span><span class='line'><span class="na">stash_dir</span>       <span class="o">=</span> <span class="s">&quot;_stash&quot;    # directory to stash posts for speedy generation</span>
</span><span class='line'><span class="na">posts_dir</span>       <span class="o">=</span> <span class="s">&quot;_posts&quot;    # directory for blog files</span>
</span><span class='line'><span class="na">themes_dir</span>      <span class="o">=</span> <span class="s">&quot;.themes&quot;   # directory for blog files</span>
</span><span class='line'><span class="na">new_post_ext</span>    <span class="o">=</span> <span class="s">&quot;markdown&quot;  # default new post file extension when using the new_post task</span>
</span><span class='line'><span class="na">new_page_ext</span>    <span class="o">=</span> <span class="s">&quot;markdown&quot;  # default new page file extension when using the new_page task</span>
</span><span class='line'><span class="na">server_port</span>     <span class="o">=</span> <span class="s">&quot;4000&quot;      # port for preview server eg. localhost:4000</span>
</span><span class='line'><span class="na">deploy_local</span>	<span class="o">=</span> <span class="s">&quot;push_local&quot;	#hiberabyss:</span>
</span><span class='line'><span class="na">editor</span>		<span class="o">=</span> <span class="s">&quot;gvim&quot;		#hiberabyss: the eidtor after new</span>
</span><span class='line'><span class="na">source_remote</span>	<span class="o">=</span> <span class="s">&quot;octopress&quot;	#hiberabyss: remote ref</span>
</span><span class='line'><span class="na">source_branch</span>	<span class="o">=</span> <span class="s">&quot;source&quot;	#hiberabyss: the source branch</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;Initial</span> <span class="err">setup</span> <span class="err">for</span> <span class="err">Octopress:</span> <span class="err">copies</span> <span class="err">the</span> <span class="err">default</span> <span class="err">theme</span> <span class="err">into</span> <span class="err">the</span> <span class="err">path</span> <span class="err">of</span> <span class="err">Jekyll&#39;s</span> <span class="err">generator.</span> <span class="err">Rake</span> <span class="err">install</span> <span class="err">defaults</span> <span class="err">to</span> <span class="err">rake</span> <span class="err">install[classic]</span> <span class="err">to</span> <span class="err">install</span> <span class="err">a</span> <span class="err">different</span> <span class="err">theme</span> <span class="err">run</span> <span class="err">rake</span> <span class="err">install[some_theme_name]&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:install,</span> <span class="err">:theme</span> <span class="err">do</span> <span class="err">|t,</span> <span class="err">args|</span>
</span><span class='line'>  <span class="err">if</span> <span class="err">File.directory?(source_dir)</span> <span class="err">||</span> <span class="err">File.directory?(&quot;sass&quot;)</span>
</span><span class='line'>    <span class="na">abort(&quot;rake aborted!&quot;) if ask(&quot;A theme is already installed, proceeding will overwrite existing files. Are you sure?&quot;, [&#39;y&#39;, &#39;n&#39;])</span> <span class="o">=</span><span class="s">= &#39;n&#39;</span>
</span><span class='line'><span class="s">  end</span>
</span><span class='line'><span class="s">  # copy theme into working Jekyll directories</span>
</span><span class='line'><span class="s">  theme = args.theme || &#39;classic&#39;</span>
</span><span class='line'><span class="s">  puts &quot;## Copying &quot;+theme+&quot; theme into ./#{source_dir} and ./sass&quot;</span>
</span><span class='line'><span class="s">  mkdir_p source_dir</span>
</span><span class='line'><span class="s">  cp_r &quot;#{themes_dir}/#{theme}/source/.&quot;, source_dir</span>
</span><span class='line'><span class="s">  mkdir_p &quot;sass&quot;</span>
</span><span class='line'><span class="s">  cp_r &quot;#{themes_dir}/#{theme}/sass/.&quot;, &quot;sass&quot;</span>
</span><span class='line'><span class="s">  mkdir_p &quot;#{source_dir}/#{posts_dir}&quot;</span>
</span><span class='line'><span class="s">  mkdir_p public_dir</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#######################</span>
</span><span class='line'><span class="c1"># Working with Jekyll #</span>
</span><span class='line'><span class="c1">#######################</span>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;Generate</span> <span class="err">jekyll</span> <span class="err">site&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:generate</span> <span class="err">do</span>
</span><span class='line'>  <span class="err">raise</span> <span class="err">&quot;</span><span class="c1">### You haven&#39;t set anything up yet. First run `rake install` to set up an Octopress theme.&quot; unless File.directory?(source_dir)</span>
</span><span class='line'>  <span class="err">puts</span> <span class="err">&quot;</span><span class="c1">## Generating Site with Jekyll&quot;</span>
</span><span class='line'>  <span class="err">system</span> <span class="err">&quot;compass</span> <span class="err">compile</span> <span class="err">--css-dir</span> <span class="c1">#{source_dir}/stylesheets&quot;</span>
</span><span class='line'>  <span class="err">system</span> <span class="err">&quot;jekyll&quot;</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;Watch</span> <span class="err">the</span> <span class="err">site</span> <span class="err">and</span> <span class="err">regenerate</span> <span class="err">when</span> <span class="err">it</span> <span class="err">changes&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:watch</span> <span class="err">do</span>
</span><span class='line'>  <span class="err">raise</span> <span class="err">&quot;</span><span class="c1">### You haven&#39;t set anything up yet. First run `rake install` to set up an Octopress theme.&quot; unless File.directory?(source_dir)</span>
</span><span class='line'>  <span class="err">puts</span> <span class="err">&quot;Starting</span> <span class="err">to</span> <span class="err">watch</span> <span class="err">source</span> <span class="err">with</span> <span class="err">Jekyll</span> <span class="err">and</span> <span class="err">Compass.&quot;</span>
</span><span class='line'>  <span class="err">system</span> <span class="err">&quot;compass</span> <span class="err">compile</span> <span class="err">--css-dir</span> <span class="c1">#{source_dir}/stylesheets&quot; unless File.exist?(&quot;#{source_dir}/stylesheets/screen.css&quot;)</span>
</span><span class='line'>  <span class="na">jekyllPid</span> <span class="o">=</span> <span class="s">Process.spawn({&quot;OCTOPRESS_ENV&quot;=&gt;&quot;preview&quot;}, &quot;jekyll --auto&quot;)</span>
</span><span class='line'><span class="s">  compassPid = Process.spawn(&quot;compass watch&quot;)</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">trap(&quot;INT&quot;)</span> <span class="err">{</span>
</span><span class='line'>    <span class="err">[jekyllPid,</span> <span class="err">compassPid].each</span> <span class="err">{</span> <span class="err">|pid|</span> <span class="err">Process.kill(9,</span> <span class="err">pid)</span> <span class="err">rescue</span> <span class="err">Errno::ESRCH</span> <span class="err">}</span>
</span><span class='line'>    <span class="err">exit</span> <span class="err">0</span>
</span><span class='line'>  <span class="err">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">[jekyllPid,</span> <span class="err">compassPid].each</span> <span class="err">{</span> <span class="err">|pid|</span> <span class="err">Process.wait(pid)</span> <span class="err">}</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;preview</span> <span class="err">the</span> <span class="err">site</span> <span class="err">in</span> <span class="err">a</span> <span class="err">web</span> <span class="err">browser&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:preview</span> <span class="err">do</span>
</span><span class='line'>  <span class="err">raise</span> <span class="err">&quot;</span><span class="c1">### You haven&#39;t set anything up yet. First run `rake install` to set up an Octopress theme.&quot; unless File.directory?(source_dir)</span>
</span><span class='line'>  <span class="err">puts</span> <span class="err">&quot;Starting</span> <span class="err">to</span> <span class="err">watch</span> <span class="err">source</span> <span class="err">with</span> <span class="err">Jekyll</span> <span class="err">and</span> <span class="err">Compass.</span> <span class="err">Starting</span> <span class="err">Rack</span> <span class="err">on</span> <span class="err">port</span> <span class="c1">#{server_port}&quot;</span>
</span><span class='line'>  <span class="err">system</span> <span class="err">&quot;compass</span> <span class="err">compile</span> <span class="err">--css-dir</span> <span class="c1">#{source_dir}/stylesheets&quot; unless File.exist?(&quot;#{source_dir}/stylesheets/screen.css&quot;)</span>
</span><span class='line'>  <span class="na">jekyllPid</span> <span class="o">=</span> <span class="s">Process.spawn({&quot;OCTOPRESS_ENV&quot;=&gt;&quot;preview&quot;}, &quot;jekyll --auto&quot;)</span>
</span><span class='line'><span class="s">  compassPid = Process.spawn(&quot;compass watch&quot;)</span>
</span><span class='line'><span class="s">  rackupPid = Process.spawn(&quot;rackup --port #{server_port}&quot;)</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">trap(&quot;INT&quot;)</span> <span class="err">{</span>
</span><span class='line'>    <span class="err">[jekyllPid,</span> <span class="err">compassPid,</span> <span class="err">rackupPid].each</span> <span class="err">{</span> <span class="err">|pid|</span> <span class="err">Process.kill(9,</span> <span class="err">pid)</span> <span class="err">rescue</span> <span class="err">Errno::ESRCH</span> <span class="err">}</span>
</span><span class='line'>    <span class="err">exit</span> <span class="err">0</span>
</span><span class='line'>  <span class="err">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">[jekyllPid,</span> <span class="err">compassPid,</span> <span class="err">rackupPid].each</span> <span class="err">{</span> <span class="err">|pid|</span> <span class="err">Process.wait(pid)</span> <span class="err">}</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># usage rake new_post[my-new-post] or rake new_post[&#39;my new post&#39;] or rake new_post (defaults to &quot;new-post&quot;)</span>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;Begin</span> <span class="err">a</span> <span class="err">new</span> <span class="err">post</span> <span class="err">in</span> <span class="c1">#{source_dir}/#{posts_dir}&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:new_post,</span> <span class="err">:title</span> <span class="err">do</span> <span class="err">|t,</span> <span class="err">args|</span>
</span><span class='line'>  <span class="err">if</span> <span class="err">args.title</span>
</span><span class='line'>    <span class="na">title</span> <span class="o">=</span> <span class="s">args.title</span>
</span><span class='line'><span class="s">  else</span>
</span><span class='line'><span class="s">    title = get_stdin(&quot;Enter a title for your post: &quot;)</span>
</span><span class='line'><span class="s">  end</span>
</span><span class='line'><span class="s">  raise &quot;### You haven&#39;t set anything up yet. First run `rake install` to set up an Octopress theme.&quot; unless File.directory?(source_dir)</span>
</span><span class='line'><span class="s">  mkdir_p &quot;#{source_dir}/#{posts_dir}&quot;</span>
</span><span class='line'><span class="s">  filename = &quot;#{source_dir}/#{posts_dir}/#{Time.now.strftime(&#39;%Y-%m-%d&#39;)}-#{title.to_url}.#{new_post_ext}&quot;</span>
</span><span class='line'><span class="s">  if File.exist?(filename)</span>
</span><span class='line'><span class="s">    system &quot;#{editor} #{filename}&quot;</span>
</span><span class='line'><span class="s">    exit</span>
</span><span class='line'><span class="s">    abort(&quot;rake aborted!&quot;) if ask(&quot;#{filename} already exists. Do you want to overwrite?&quot;, [&#39;y&#39;, &#39;n&#39;]) == &#39;n&#39;</span>
</span><span class='line'><span class="s">  end</span>
</span><span class='line'><span class="s">  puts &quot;Creating new post: #{filename}&quot;</span>
</span><span class='line'><span class="s">  open(filename, &#39;w&#39;) do |post|</span>
</span><span class='line'><span class="s">    post.puts &quot;---&quot;</span>
</span><span class='line'><span class="s">    post.puts &quot;layout: post&quot;</span>
</span><span class='line'><span class="s">    #post.puts &quot;title: \&quot;#{title.gsub(/&amp;/,&#39;&amp;amp;&#39;)}\&quot;&quot;</span>
</span><span class='line'><span class="s">    post.puts &quot;title: \&quot;\&quot;&quot;</span>
</span><span class='line'><span class="s">    post.puts &quot;date: #{Time.now.strftime(&#39;%Y-%m-%d %H:%M&#39;)}&quot;</span>
</span><span class='line'><span class="s">    post.puts &quot;comments: true&quot;</span>
</span><span class='line'><span class="s">    post.puts &quot;categories: &quot;</span>
</span><span class='line'><span class="s">    post.puts &quot;---&quot;</span>
</span><span class='line'><span class="s">  end</span>
</span><span class='line'><span class="s">  system &quot;#{editor} #{filename}&quot;</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># usage rake new_page[my-new-page] or rake new_page[my-new-page.html] or rake new_page (defaults to &quot;new-page.markdown&quot;)</span>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;Create</span> <span class="err">a</span> <span class="err">new</span> <span class="err">page</span> <span class="err">in</span> <span class="c1">#{source_dir}/(filename)/index.#{new_page_ext}&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:new_page,</span> <span class="err">:filename</span> <span class="err">do</span> <span class="err">|t,</span> <span class="err">args|</span>
</span><span class='line'>  <span class="err">raise</span> <span class="err">&quot;</span><span class="c1">### You haven&#39;t set anything up yet. First run `rake install` to set up an Octopress theme.&quot; unless File.directory?(source_dir)</span>
</span><span class='line'>  <span class="na">args.with_defaults(:filename</span> <span class="o">=</span><span class="s">&gt; &#39;new-page&#39;)</span>
</span><span class='line'><span class="s">  page_dir = [source_dir]</span>
</span><span class='line'><span class="s">  if args.filename.downcase =~ /(^.+\/)?(.+)/</span>
</span><span class='line'><span class="s">    filename, dot, extension = $2.rpartition(&#39;.&#39;).reject(&amp;:empty?)         # Get filename and extension</span>
</span><span class='line'><span class="s">    title = filename</span>
</span><span class='line'><span class="s">    page_dir.concat($1.downcase.sub(/^\//, &#39;&#39;).split(&#39;/&#39;)) unless $1.nil?  # Add path to page_dir Array</span>
</span><span class='line'><span class="s">    if extension.nil?</span>
</span><span class='line'><span class="s">      page_dir &lt;&lt; filename</span>
</span><span class='line'><span class="s">      filename = &quot;index&quot;</span>
</span><span class='line'><span class="s">    end</span>
</span><span class='line'><span class="s">    extension ||= new_page_ext</span>
</span><span class='line'><span class="s">    page_dir = page_dir.map! { |d| d = d.to_url }.join(&#39;/&#39;)                # Sanitize path</span>
</span><span class='line'><span class="s">    filename = filename.downcase.to_url</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">mkdir_p</span> <span class="err">page_dir</span>
</span><span class='line'>    <span class="na">file</span> <span class="o">=</span> <span class="s">&quot;#{page_dir}/#{filename}.#{extension}&quot;</span>
</span><span class='line'><span class="s">    if File.exist?(file)</span>
</span><span class='line'><span class="s">      abort(&quot;rake aborted!&quot;) if ask(&quot;#{file} already exists. Do you want to overwrite?&quot;, [&#39;y&#39;, &#39;n&#39;]) == &#39;n&#39;</span>
</span><span class='line'><span class="s">    end</span>
</span><span class='line'><span class="s">    puts &quot;Creating new page: #{file}&quot;</span>
</span><span class='line'><span class="s">    open(file, &#39;w&#39;) do |page|</span>
</span><span class='line'><span class="s">      page.puts &quot;---&quot;</span>
</span><span class='line'><span class="s">      page.puts &quot;layout: page&quot;</span>
</span><span class='line'><span class="s">      page.puts &quot;title: \&quot;#{title}\&quot;&quot;</span>
</span><span class='line'><span class="s">      page.puts &quot;date: #{Time.now.strftime(&#39;%Y-%m-%d %H:%M&#39;)}&quot;</span>
</span><span class='line'><span class="s">      page.puts &quot;comments: true&quot;</span>
</span><span class='line'><span class="s">      page.puts &quot;sharing: true&quot;</span>
</span><span class='line'><span class="s">      page.puts &quot;footer: true&quot;</span>
</span><span class='line'><span class="s">      page.puts &quot;---&quot;</span>
</span><span class='line'><span class="s">    end</span>
</span><span class='line'><span class="s">    system &quot;#{editor} #{file}&quot;</span>
</span><span class='line'><span class="s">  else</span>
</span><span class='line'><span class="s">    puts &quot;Syntax error: #{args.filename} contains unsupported characters&quot;</span>
</span><span class='line'><span class="s">  end</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># usage rake isolate[my-post]</span>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;Move</span> <span class="err">all</span> <span class="err">other</span> <span class="err">posts</span> <span class="err">than</span> <span class="err">the</span> <span class="err">one</span> <span class="err">currently</span> <span class="err">being</span> <span class="err">worked</span> <span class="err">on</span> <span class="err">to</span> <span class="err">a</span> <span class="err">temporary</span> <span class="err">stash</span> <span class="err">location</span> <span class="err">(stash)</span> <span class="err">so</span> <span class="err">regenerating</span> <span class="err">the</span> <span class="err">site</span> <span class="err">happens</span> <span class="err">much</span> <span class="err">more</span> <span class="err">quickly.&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:isolate,</span> <span class="err">:filename</span> <span class="err">do</span> <span class="err">|t,</span> <span class="err">args|</span>
</span><span class='line'>  <span class="na">stash_dir</span> <span class="o">=</span> <span class="s">&quot;#{source_dir}/#{stash_dir}&quot;</span>
</span><span class='line'><span class="s">  FileUtils.mkdir(stash_dir) unless File.exist?(stash_dir)</span>
</span><span class='line'><span class="s">  Dir.glob(&quot;#{source_dir}/#{posts_dir}/*.*&quot;) do |post|</span>
</span><span class='line'><span class="s">    FileUtils.mv post, stash_dir unless post.include?(args.filename)</span>
</span><span class='line'><span class="s">  end</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;Move</span> <span class="err">all</span> <span class="err">stashed</span> <span class="err">posts</span> <span class="err">back</span> <span class="err">into</span> <span class="err">the</span> <span class="err">posts</span> <span class="err">directory,</span> <span class="err">ready</span> <span class="err">for</span> <span class="err">site</span> <span class="err">generation.&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:integrate</span> <span class="err">do</span>
</span><span class='line'>  <span class="err">FileUtils.mv</span> <span class="err">Dir.glob(&quot;</span><span class="c1">#{source_dir}/#{stash_dir}/*.*&quot;), &quot;#{source_dir}/#{posts_dir}/&quot;</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;Clean</span> <span class="err">out</span> <span class="err">caches:</span> <span class="err">.pygments-cache,</span> <span class="err">.gist-cache,</span> <span class="err">.sass-cache&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:clean</span> <span class="err">do</span>
</span><span class='line'>  <span class="err">rm_rf</span> <span class="k">[&quot;.pygments-cache/**&quot;, &quot;.gist-cache/**&quot;, &quot;.sass-cache/**&quot;, &quot;source/stylesheets/screen.css&quot;]</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;Move</span> <span class="err">sass</span> <span class="err">to</span> <span class="err">sass.old,</span> <span class="err">install</span> <span class="err">sass</span> <span class="err">theme</span> <span class="err">updates,</span> <span class="err">replace</span> <span class="err">sass/custom</span> <span class="err">with</span> <span class="err">sass.old/custom&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:update_style,</span> <span class="err">:theme</span> <span class="err">do</span> <span class="err">|t,</span> <span class="err">args|</span>
</span><span class='line'>  <span class="na">theme</span> <span class="o">=</span> <span class="s">args.theme || &#39;classic&#39;</span>
</span><span class='line'><span class="s">  if File.directory?(&quot;sass.old&quot;)</span>
</span><span class='line'><span class="s">    puts &quot;removed existing sass.old directory&quot;</span>
</span><span class='line'><span class="s">    rm_r &quot;sass.old&quot;, :secure=&gt;true</span>
</span><span class='line'><span class="s">  end</span>
</span><span class='line'><span class="s">  mv &quot;sass&quot;, &quot;sass.old&quot;</span>
</span><span class='line'><span class="s">  puts &quot;## Moved styles into sass.old/&quot;</span>
</span><span class='line'><span class="s">  cp_r &quot;#{themes_dir}/&quot;+theme+&quot;/sass/&quot;, &quot;sass&quot;</span>
</span><span class='line'><span class="s">  cp_r &quot;sass.old/custom/.&quot;, &quot;sass/custom&quot;</span>
</span><span class='line'><span class="s">  puts &quot;## Updated Sass ##&quot;</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;Move</span> <span class="err">source</span> <span class="err">to</span> <span class="err">source.old,</span> <span class="err">install</span> <span class="err">source</span> <span class="err">theme</span> <span class="err">updates,</span> <span class="err">replace</span> <span class="err">source/_includes/navigation.html</span> <span class="err">with</span> <span class="err">source.old&#39;s</span> <span class="err">navigation&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:update_source,</span> <span class="err">:theme</span> <span class="err">do</span> <span class="err">|t,</span> <span class="err">args|</span>
</span><span class='line'>  <span class="na">theme</span> <span class="o">=</span> <span class="s">args.theme || &#39;classic&#39;</span>
</span><span class='line'><span class="s">  if File.directory?(&quot;#{source_dir}.old&quot;)</span>
</span><span class='line'><span class="s">    puts &quot;## Removed existing #{source_dir}.old directory&quot;</span>
</span><span class='line'><span class="s">    rm_r &quot;#{source_dir}.old&quot;, :secure=&gt;true</span>
</span><span class='line'><span class="s">  end</span>
</span><span class='line'><span class="s">  mkdir &quot;#{source_dir}.old&quot;</span>
</span><span class='line'><span class="s">  cp_r &quot;#{source_dir}/.&quot;, &quot;#{source_dir}.old&quot;</span>
</span><span class='line'><span class="s">  puts &quot;## Copied #{source_dir} into #{source_dir}.old/&quot;</span>
</span><span class='line'><span class="s">  cp_r &quot;#{themes_dir}/&quot;+theme+&quot;/source/.&quot;, source_dir, :remove_destination=&gt;true</span>
</span><span class='line'><span class="s">  cp_r &quot;#{source_dir}.old/_includes/custom/.&quot;, &quot;#{source_dir}/_includes/custom/&quot;, :remove_destination=&gt;true</span>
</span><span class='line'><span class="s">  cp &quot;#{source_dir}.old/favicon.png&quot;, source_dir</span>
</span><span class='line'><span class="s">  mv &quot;#{source_dir}/index.html&quot;, &quot;#{blog_index_dir}&quot;, :force=&gt;true if blog_index_dir != source_dir</span>
</span><span class='line'><span class="s">  cp &quot;#{source_dir}.old/index.html&quot;, source_dir if blog_index_dir != source_dir &amp;&amp; File.exists?(&quot;#{source_dir}.old/index.html&quot;)</span>
</span><span class='line'><span class="s">  puts &quot;## Updated #{source_dir} ##&quot;</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">##############</span>
</span><span class='line'><span class="c1"># Deploying  #</span>
</span><span class='line'><span class="c1">##############</span>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;Default</span> <span class="err">deploy</span> <span class="err">task&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:deploy</span> <span class="err">do</span>
</span><span class='line'>  <span class="c1"># Check if preview posts exist, which should not be published</span>
</span><span class='line'>  <span class="err">if</span> <span class="err">File.exists?(&quot;.preview-mode&quot;)</span>
</span><span class='line'>    <span class="err">puts</span> <span class="err">&quot;</span><span class="c1">## Found posts in preview mode, regenerating files ...&quot;</span>
</span><span class='line'>    <span class="err">File.delete(&quot;.preview-mode&quot;)</span>
</span><span class='line'>    <span class="err">Rake::Task[:generate].execute</span>
</span><span class='line'>  <span class="err">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">Rake::Task[:copydot].invoke(source_dir,</span> <span class="err">public_dir)</span>
</span><span class='line'>  <span class="err">Rake::Task[&quot;</span><span class="c1">#{deploy_default}&quot;].execute</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#hiberabyss: deploy to local</span>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;Local</span> <span class="err">deploy</span> <span class="err">task&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:ldeploy</span> <span class="err">do</span>
</span><span class='line'>  <span class="c1"># Check if preview posts exist, which should not be published</span>
</span><span class='line'>  <span class="err">if</span> <span class="err">File.exists?(&quot;.preview-mode&quot;)</span>
</span><span class='line'>    <span class="err">puts</span> <span class="err">&quot;</span><span class="c1">## Found posts in preview mode, regenerating files ...&quot;</span>
</span><span class='line'>    <span class="err">File.delete(&quot;.preview-mode&quot;)</span>
</span><span class='line'>    <span class="err">Rake::Task[:generate].execute</span>
</span><span class='line'>  <span class="err">end</span>
</span><span class='line'><span class="err">Rake::Task[:copydot].invoke(source_dir,</span> <span class="err">public_dir)</span>
</span><span class='line'>  <span class="err">Rake::Task[&quot;</span><span class="c1">#{deploy_local}&quot;].execute</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;Generate</span> <span class="err">website</span> <span class="err">and</span> <span class="err">deploy&quot;</span>
</span><span class='line'><span class="na">task :gen_deploy</span> <span class="o">=</span><span class="s">&gt; [:integrate, :generate, :deploy] do</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;Local</span> <span class="err">Generate</span> <span class="err">and</span> <span class="err">deploy&quot;</span>
</span><span class='line'><span class="na">task :lgdeploy</span> <span class="o">=</span><span class="s">&gt; [:integrate, :generate, :ldeploy] do</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;copy</span> <span class="err">dot</span> <span class="err">files</span> <span class="err">for</span> <span class="err">deployment&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:copydot,</span> <span class="err">:source,</span> <span class="err">:dest</span> <span class="err">do</span> <span class="err">|t,</span> <span class="err">args|</span>
</span><span class='line'>  <span class="err">FileList[&quot;</span><span class="c1">#{args.source}/**/.*&quot;].exclude(&quot;**/.&quot;, &quot;**/..&quot;, &quot;**/.DS_Store&quot;, &quot;**/._*&quot;).each do |file|</span>
</span><span class='line'>    <span class="err">cp_r</span> <span class="err">file,</span> <span class="err">file.gsub(/</span><span class="c1">#{args.source}/, &quot;#{args.dest}&quot;) unless File.directory?(file)</span>
</span><span class='line'>  <span class="err">end</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;Deploy</span> <span class="err">website</span> <span class="err">via</span> <span class="err">rsync&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:rsync</span> <span class="err">do</span>
</span><span class='line'>  <span class="na">exclude</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'><span class="s">  if File.exists?(&#39;./rsync-exclude&#39;)</span>
</span><span class='line'><span class="s">    exclude = &quot;--exclude-from &#39;#{File.expand_path(&#39;./rsync-exclude&#39;)}&#39;&quot;</span>
</span><span class='line'><span class="s">  end</span>
</span><span class='line'><span class="s">  puts &quot;## Deploying website via Rsync&quot;</span>
</span><span class='line'><span class="s">  ok_failed system(&quot;rsync -avze &#39;ssh -p #{ssh_port}&#39; #{exclude} #{rsync_args} #{&quot;--delete&quot; unless rsync_delete == false} #{public_dir}/ #{ssh_user}:#{document_root}&quot;)</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;deploy</span> <span class="err">public</span> <span class="err">directory</span> <span class="err">to</span> <span class="err">local</span> <span class="err">deploy_dir&quot;</span>
</span><span class='line'><span class="err">multitask</span> <span class="err">:push_local</span> <span class="err">do</span>
</span><span class='line'>  <span class="err">puts</span> <span class="err">&quot;</span><span class="c1">## Deploying branch to local &quot;</span>
</span><span class='line'>  <span class="err">(Dir[&quot;</span><span class="c1">#{deploy_dir}/*&quot;]).each { |f| rm_rf(f) }</span>
</span><span class='line'>  <span class="err">Rake::Task[:copydot].invoke(public_dir,</span> <span class="err">deploy_dir)</span>
</span><span class='line'>  <span class="err">puts</span> <span class="err">&quot;\n</span><span class="c1">## copying #{public_dir} to #{deploy_dir}&quot;</span>
</span><span class='line'>  <span class="err">cp_r</span> <span class="err">&quot;</span><span class="c1">#{public_dir}/.&quot;, deploy_dir</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;deploy</span> <span class="err">public</span> <span class="err">directory</span> <span class="err">to</span> <span class="err">github</span> <span class="err">pages&quot;</span>
</span><span class='line'><span class="err">multitask</span> <span class="err">:push</span> <span class="err">do</span>
</span><span class='line'>  <span class="err">puts</span> <span class="err">&quot;</span><span class="c1">## Deploying branch to Github Pages &quot;</span>
</span><span class='line'>  <span class="err">(Dir[&quot;</span><span class="c1">#{deploy_dir}/*&quot;]).each { |f| rm_rf(f) }</span>
</span><span class='line'>  <span class="err">Rake::Task[:copydot].invoke(public_dir,</span> <span class="err">deploy_dir)</span>
</span><span class='line'>  <span class="err">puts</span> <span class="err">&quot;\n</span><span class="c1">## copying #{public_dir} to #{deploy_dir}&quot;</span>
</span><span class='line'>  <span class="err">cp_r</span> <span class="err">&quot;</span><span class="c1">#{public_dir}/.&quot;, deploy_dir</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">system</span> <span class="err">&quot;git</span> <span class="err">add</span> <span class="err">.&quot;</span>
</span><span class='line'>  <span class="err">system</span> <span class="err">&quot;git</span> <span class="err">add</span> <span class="err">-u&quot;</span>
</span><span class='line'>  <span class="err">puts</span> <span class="err">&quot;\n</span><span class="c1">## Source Commiting&quot;</span>
</span><span class='line'>  <span class="na">message</span> <span class="o">=</span> <span class="s">&quot;Source updated at #{Time.now.utc}&quot;</span>
</span><span class='line'><span class="s">  system &quot;git commit -m \&quot;#{message}\&quot;&quot;</span>
</span><span class='line'><span class="s">  system &quot;git push #{source_remote} #{source_branch} --force&quot;</span>
</span><span class='line'><span class="s">  puts &quot;\n## Source update complete&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">cd</span> <span class="err">&quot;</span><span class="c1">#{deploy_dir}&quot; do</span>
</span><span class='line'>    <span class="err">system</span> <span class="err">&quot;git</span> <span class="err">add</span> <span class="err">.&quot;</span>
</span><span class='line'>    <span class="err">system</span> <span class="err">&quot;git</span> <span class="err">add</span> <span class="err">-u&quot;</span>
</span><span class='line'>    <span class="err">puts</span> <span class="err">&quot;\n</span><span class="c1">## Commiting: Site updated at #{Time.now.utc}&quot;</span>
</span><span class='line'>    <span class="na">message</span> <span class="o">=</span> <span class="s">&quot;Site updated at #{Time.now.utc}&quot;</span>
</span><span class='line'><span class="s">    system &quot;git commit -m \&quot;#{message}\&quot;&quot;</span>
</span><span class='line'><span class="s">    puts &quot;\n## Pushing generated #{deploy_dir} website&quot;</span>
</span><span class='line'><span class="s">    system &quot;git push origin #{deploy_branch} --force&quot;</span>
</span><span class='line'><span class="s">    puts &quot;\n## Github Pages deploy complete&quot;</span>
</span><span class='line'><span class="s">  end</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;Update</span> <span class="err">configurations</span> <span class="err">to</span> <span class="err">support</span> <span class="err">publishing</span> <span class="err">to</span> <span class="err">root</span> <span class="err">or</span> <span class="err">sub</span> <span class="err">directory&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:set_root_dir,</span> <span class="err">:dir</span> <span class="err">do</span> <span class="err">|t,</span> <span class="err">args|</span>
</span><span class='line'>  <span class="err">puts</span> <span class="err">&quot;&gt;&gt;&gt;</span> <span class="err">!!</span> <span class="err">Please</span> <span class="err">provide</span> <span class="err">a</span> <span class="err">directory,</span> <span class="err">eg.</span> <span class="err">rake</span> <span class="err">config_dir[publishing/subdirectory]&quot;</span> <span class="err">unless</span> <span class="err">args.dir</span>
</span><span class='line'>  <span class="err">if</span> <span class="err">args.dir</span>
</span><span class='line'>    <span class="na">if args.dir</span> <span class="o">=</span><span class="s">= &quot;/&quot;</span>
</span><span class='line'><span class="s">      dir = &quot;&quot;</span>
</span><span class='line'><span class="s">    else</span>
</span><span class='line'><span class="s">      dir = &quot;/&quot; + args.dir.sub(/(\/*)(.+)/, &quot;\\2&quot;).sub(/\/$/, &#39;&#39;);</span>
</span><span class='line'><span class="s">    end</span>
</span><span class='line'><span class="s">    rakefile = IO.read(__FILE__)</span>
</span><span class='line'><span class="s">    rakefile.sub!(/public_dir(\s*)=(\s*)([&quot;&#39;])[\w\-\/]*[&quot;&#39;]/, &quot;public_dir\\1=\\2\\3public#{dir}\\3&quot;)</span>
</span><span class='line'><span class="s">    File.open(__FILE__, &#39;w&#39;) do |f|</span>
</span><span class='line'><span class="s">      f.write rakefile</span>
</span><span class='line'><span class="s">    end</span>
</span><span class='line'><span class="s">    compass_config = IO.read(&#39;config.rb&#39;)</span>
</span><span class='line'><span class="s">    compass_config.sub!(/http_path(\s*)=(\s*)([&quot;&#39;])[\w\-\/]*[&quot;&#39;]/, &quot;http_path\\1=\\2\\3#{dir}/\\3&quot;)</span>
</span><span class='line'><span class="s">    compass_config.sub!(/http_images_path(\s*)=(\s*)([&quot;&#39;])[\w\-\/]*[&quot;&#39;]/, &quot;http_images_path\\1=\\2\\3#{dir}/images\\3&quot;)</span>
</span><span class='line'><span class="s">    compass_config.sub!(/http_fonts_path(\s*)=(\s*)([&quot;&#39;])[\w\-\/]*[&quot;&#39;]/, &quot;http_fonts_path\\1=\\2\\3#{dir}/fonts\\3&quot;)</span>
</span><span class='line'><span class="s">    compass_config.sub!(/css_dir(\s*)=(\s*)([&quot;&#39;])[\w\-\/]*[&quot;&#39;]/, &quot;css_dir\\1=\\2\\3public#{dir}/stylesheets\\3&quot;)</span>
</span><span class='line'><span class="s">    File.open(&#39;config.rb&#39;, &#39;w&#39;) do |f|</span>
</span><span class='line'><span class="s">      f.write compass_config</span>
</span><span class='line'><span class="s">    end</span>
</span><span class='line'><span class="s">    jekyll_config = IO.read(&#39;_config.yml&#39;)</span>
</span><span class='line'><span class="s">    jekyll_config.sub!(/^destination:.+$/, &quot;destination: public#{dir}&quot;)</span>
</span><span class='line'><span class="s">    jekyll_config.sub!(/^subscribe_rss:\s*\/.+$/, &quot;subscribe_rss: #{dir}/atom.xml&quot;)</span>
</span><span class='line'><span class="s">    jekyll_config.sub!(/^root:.*$/, &quot;root: /#{dir.sub(/^\//, &#39;&#39;)}&quot;)</span>
</span><span class='line'><span class="s">    File.open(&#39;_config.yml&#39;, &#39;w&#39;) do |f|</span>
</span><span class='line'><span class="s">      f.write jekyll_config</span>
</span><span class='line'><span class="s">    end</span>
</span><span class='line'><span class="s">    rm_rf public_dir</span>
</span><span class='line'><span class="s">    mkdir_p &quot;#{public_dir}#{dir}&quot;</span>
</span><span class='line'><span class="s">    puts &quot;## Site&#39;s root directory is now &#39;/#{dir.sub(/^\//, &#39;&#39;)}&#39; ##&quot;</span>
</span><span class='line'><span class="s">  end</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;Set</span> <span class="err">up</span> <span class="err">_deploy</span> <span class="err">folder</span> <span class="err">and</span> <span class="err">deploy</span> <span class="err">branch</span> <span class="err">for</span> <span class="err">Github</span> <span class="err">Pages</span> <span class="err">deployment&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:setup_github_pages,</span> <span class="err">:repo</span> <span class="err">do</span> <span class="err">|t,</span> <span class="err">args|</span>
</span><span class='line'>  <span class="err">if</span> <span class="err">args.repo</span>
</span><span class='line'>    <span class="na">repo_url</span> <span class="o">=</span> <span class="s">args.repo</span>
</span><span class='line'><span class="s">  else</span>
</span><span class='line'><span class="s">    puts &quot;Enter the read/write url for your repository&quot;</span>
</span><span class='line'><span class="s">    puts &quot;(For example, &#39;git@github.com:your_username/your_username.github.io)&quot;</span>
</span><span class='line'><span class="s">    puts &quot;           or &#39;https://github.com/your_username/your_username.github.io&#39;)&quot;</span>
</span><span class='line'><span class="s">    repo_url = get_stdin(&quot;Repository url: &quot;)</span>
</span><span class='line'><span class="s">  end</span>
</span><span class='line'><span class="s">  protocol = (repo_url.match(/(^git)@/).nil?) ? &#39;https&#39; : &#39;git&#39;</span>
</span><span class='line'><span class="s">  if protocol == &#39;git&#39;</span>
</span><span class='line'><span class="s">    user = repo_url.match(/:([^\/]+)/)[1]</span>
</span><span class='line'><span class="s">  else</span>
</span><span class='line'><span class="s">    user = repo_url.match(/github\.com\/([^\/]+)/)[1]</span>
</span><span class='line'><span class="s">  end</span>
</span><span class='line'><span class="s">  branch = (repo_url.match(/\/[\w-]+\.github\.(?:io|com)/).nil?) ? &#39;gh-pages&#39; : &#39;master&#39;</span>
</span><span class='line'><span class="s">  project = (branch == &#39;gh-pages&#39;) ? repo_url.match(/\/([^\.]+)/)[1] : &#39;&#39;</span>
</span><span class='line'><span class="s">  unless (`git remote -v` =~ /origin.+?octopress(?:\.git)?/).nil?</span>
</span><span class='line'><span class="s">    # If octopress is still the origin remote (from cloning) rename it to octopress</span>
</span><span class='line'><span class="s">    system &quot;git remote rename origin octopress&quot;</span>
</span><span class='line'><span class="s">    if branch == &#39;master&#39;</span>
</span><span class='line'><span class="s">      # If this is a user/organization pages repository, add the correct origin remote</span>
</span><span class='line'><span class="s">      # and checkout the source branch for committing changes to the blog source.</span>
</span><span class='line'><span class="s">      system &quot;git remote add origin #{repo_url}&quot;</span>
</span><span class='line'><span class="s">      puts &quot;Added remote #{repo_url} as origin&quot;</span>
</span><span class='line'><span class="s">      system &quot;git config branch.master.remote origin&quot;</span>
</span><span class='line'><span class="s">      puts &quot;Set origin as default remote&quot;</span>
</span><span class='line'><span class="s">      system &quot;git branch -m master source&quot;</span>
</span><span class='line'><span class="s">      puts &quot;Master branch renamed to &#39;source&#39; for committing your blog source files&quot;</span>
</span><span class='line'><span class="s">    else</span>
</span><span class='line'><span class="s">      unless !public_dir.match(&quot;#{project}&quot;).nil?</span>
</span><span class='line'><span class="s">        system &quot;rake set_root_dir[#{project}]&quot;</span>
</span><span class='line'><span class="s">      end</span>
</span><span class='line'><span class="s">    end</span>
</span><span class='line'><span class="s">  end</span>
</span><span class='line'><span class="s">  url = &quot;http://#{user}.github.io&quot;</span>
</span><span class='line'><span class="s">  url += &quot;/#{project}&quot; unless project == &#39;&#39;</span>
</span><span class='line'><span class="s">  jekyll_config = IO.read(&#39;_config.yml&#39;)</span>
</span><span class='line'><span class="s">  jekyll_config.sub!(/^url:.*$/, &quot;url: #{url}&quot;)</span>
</span><span class='line'><span class="s">  File.open(&#39;_config.yml&#39;, &#39;w&#39;) do |f|</span>
</span><span class='line'><span class="s">    f.write jekyll_config</span>
</span><span class='line'><span class="s">  end</span>
</span><span class='line'><span class="s">  rm_rf deploy_dir</span>
</span><span class='line'><span class="s">  mkdir deploy_dir</span>
</span><span class='line'><span class="s">  cd &quot;#{deploy_dir}&quot; do</span>
</span><span class='line'><span class="s">    system &quot;git init&quot;</span>
</span><span class='line'><span class="s">    system &quot;echo &#39;My Octopress Page is coming soon &amp;hellip;&#39; &gt; index.html&quot;</span>
</span><span class='line'><span class="s">    system &quot;git add .&quot;</span>
</span><span class='line'><span class="s">    system &quot;git commit -m \&quot;Octopress init\&quot;&quot;</span>
</span><span class='line'><span class="s">    system &quot;git branch -m gh-pages&quot; unless branch == &#39;master&#39;</span>
</span><span class='line'><span class="s">    system &quot;git remote add origin #{repo_url}&quot;</span>
</span><span class='line'><span class="s">    rakefile = IO.read(__FILE__)</span>
</span><span class='line'><span class="s">    rakefile.sub!(/deploy_branch(\s*)=(\s*)([&quot;&#39;])[\w-]*[&quot;&#39;]/, &quot;deploy_branch\\1=\\2\\3#{branch}\\3&quot;)</span>
</span><span class='line'><span class="s">    rakefile.sub!(/deploy_default(\s*)=(\s*)([&quot;&#39;])[\w-]*[&quot;&#39;]/, &quot;deploy_default\\1=\\2\\3push\\3&quot;)</span>
</span><span class='line'><span class="s">    File.open(__FILE__, &#39;w&#39;) do |f|</span>
</span><span class='line'><span class="s">      f.write rakefile</span>
</span><span class='line'><span class="s">    end</span>
</span><span class='line'><span class="s">  end</span>
</span><span class='line'><span class="s">  puts &quot;\n---\n## Now you can deploy to #{url} with `rake deploy` ##&quot;</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">def</span> <span class="err">ok_failed(condition)</span>
</span><span class='line'>  <span class="err">if</span> <span class="err">(condition)</span>
</span><span class='line'>    <span class="err">puts</span> <span class="err">&quot;OK&quot;</span>
</span><span class='line'>  <span class="err">else</span>
</span><span class='line'>    <span class="err">puts</span> <span class="err">&quot;FAILED&quot;</span>
</span><span class='line'>  <span class="err">end</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">def</span> <span class="err">get_stdin(message)</span>
</span><span class='line'>  <span class="err">print</span> <span class="err">message</span>
</span><span class='line'>  <span class="err">STDIN.gets.chomp</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">def</span> <span class="err">ask(message,</span> <span class="err">valid_options)</span>
</span><span class='line'>  <span class="err">if</span> <span class="err">valid_options</span>
</span><span class='line'>    <span class="na">answer</span> <span class="o">=</span> <span class="s">get_stdin(&quot;#{message} #{valid_options.to_s.gsub(/&quot;/, &#39;&#39;).gsub(/, /,&#39;/&#39;)} &quot;) while !valid_options.include?(answer)</span>
</span><span class='line'><span class="s">  else</span>
</span><span class='line'><span class="s">    answer = get_stdin(message)</span>
</span><span class='line'><span class="s">  end</span>
</span><span class='line'><span class="s">  answer</span>
</span><span class='line'><span class="err">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">desc</span> <span class="err">&quot;list</span> <span class="err">tasks&quot;</span>
</span><span class='line'><span class="err">task</span> <span class="err">:list</span> <span class="err">do</span>
</span><span class='line'>  <span class="err">puts</span> <span class="err">&quot;Tasks:</span> <span class="c1">#{(Rake::Task.tasks - [Rake::Task[:list]]).join(&#39;, &#39;)}&quot;</span>
</span><span class='line'>  <span class="err">puts</span> <span class="err">&quot;(type</span> <span class="err">rake</span> <span class="err">-T</span> <span class="err">for</span> <span class="err">more</span> <span class="err">detail)\n\n&quot;</span>
</span><span class='line'><span class="err">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

]]></content>
  </entry>
  
</feed>
