<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: FileSystem | 蛰渊-成长的轨迹]]></title>
  <link href="http://hiberabyss.github.io/blog/categories/filesystem/atom.xml" rel="self"/>
  <link href="http://hiberabyss.github.io/"/>
  <updated>2013-06-25T19:05:37+08:00</updated>
  <id>http://hiberabyss.github.io/</id>
  <author>
    <name><![CDATA[hiberabyss]]></name>
    <email><![CDATA[liuhb90@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Lustre-2.3的安装与配置]]></title>
    <link href="http://hiberabyss.github.io/blog/20130624/lustre-configture/"/>
    <updated>2013-06-24T12:37:00+08:00</updated>
    <id>http://hiberabyss.github.io/blog/20130624/lustre-configture</id>
    <content type="html"><![CDATA[<p>Lustre是一个分布式文件系统，由MDS（元数据服务器）、OSS（对象存储服务器）和Client（客户端）三部分组成。其中MDS和OSS都可以有多个节点，通过MGS进行管理，MGS只能有一个。</p>

<h2 id="section">主要内容</h2>
<ul>
  <li>安装环境  </li>
  <li>Lustre的安装</li>
  <li>Lustre的配置</li>
  <li>用于Lustre管理的实用工具</li>
  <li>遇到的问题与解决方案</li>
  <li>有创意的Idea</li>
</ul>

<!--more-->

<h2 id="section-1">安装环境</h2>
<ul>
  <li>操作系统：CentOS 6.3 (x86_64)</li>
  <li>内核版本：2.6.32-279</li>
  <li>Lustre版本：2.3</li>
  <li>Lustre节点：一个MGS和MDT，使用同一个服务器；多个OSS。</li>
</ul>

<h2 id="lustre">Lustre的安装</h2>
<p>安装之前，对系统环境有如下要求：   </p>

<ol>
  <li>必须已安装<em>net-snmp</em>，否则在安装<em>lustre-version.rpm</em>时会报错；</li>
  <li>selinux必须被设置为disabled，如果未关闭则在<em>mkfs.lustre</em>操作时会报错；可通过sestatus查看selinux当前状态，如果为enforcing则表示未关闭；可通过命令<code>setenforce [permissive|0]</code>临时性关闭;永久关闭则需要修改配置文件<em>/etc/selinux/config</em>，做如下修改重启后生效：</li>
</ol>

<p><code>bash
SELINUX=disabled
</code></p>

<p>下载<a href="http://downloads.whamcloud.com/public/e2fsprogs/latest/el6/RPMS/x86_64/">e2fsprogs</a>并安装：</p>

<p><code>bash
rpm -Uvh --nodeps \
e2fsprogs-devel-1.42.7.wc1-7.el6.x86_64.rpm \
e2fsprogs-libs-1.42.7.wc1-7.el6.x86_64.rpm \
e2fsprogs-1.42.7.wc1-7.el6.x86_64.rpm \
libcom_err-devel-1.42.7.wc1-7.el6.x86_64.rpm \
libcom_err-1.42.7.wc1-7.el6.x86_64.rpm \
libss-devel-1.42.7.wc1-7.el6.x86_64.rpm \
libss-1.42.7.wc1-7.el6.x86_64.rpm
</code></p>

<p>下载<a href="http://downloads.whamcloud.com/public/lustre/lustre-2.3.0/el6/server/RPMS/x86_64/">kernel</a>包并安装（如果要使用InfiniBind连接方式，则必须安装kernel-ib-version包，且需要卸载系统中已经安装的以mlnx开头的kenel包）：</p>

<p><code>bash
rpm -ivh \
kernel-firmware-2.6.32-279.5.1.el6_lustre.gb16fe80.x86_64.rpm \
kernel-devel-2.6.32-279.5.1.el6_lustre.gb16fe80.x86_64.rpm \
kernel-2.6.32-279.5.1.el6_lustre.gb16fe80.x86_64.rpm \
kernel-ib-version
</code></p>

<p>下载并安装<a href="http://downloads.whamcloud.com/public/lustre/lustre-2.3.0/el6/server/RPMS/x86_64/">Lustre</a>：</p>

<p><code>bash
rpm -ivh \
lustre-ldiskfs-3.3.0-2.6.32_279.5.1.el6_lustre.gb16fe80.x86_64.x86_64.rpm \
lustre-modules-2.3.0-2.6.32_279.5.1.el6_lustre.gb16fe80.x86_64.x86_64.rpm \
lustre-2.3.0-2.6.32_279.5.1.el6_lustre.gb16fe80.x86_64.x86_64.rpm
</code></p>

<h2 id="lustre-1">Lustre的配置</h2>
<p>配置Lustre所使用的借口名称以及相对应的别名；创建<em>/etc/modprobe.d/lnet.conf</em>文件，写入以下内容：</p>

<p><code>bash
options lnet networks="o2ib0(ib0)"
</code></p>

<p>载入相关模块：</p>

<p><code>bash
modprobe lustre
modprobe ldiskfs
modprobe lnet
</code></p>

<p>这时可以查看<em>/sys/modules/lnet/prarameters/networks</em>内容，以确定<em>lnet.conf</em>中的配置信息是否已经加载至内核。</p>

<p>在MDS上的创建Lustre文件系统，并挂载：</p>

<p><code>bash
mkfs.lustre --fsname=mylustre --mdt --mgs --index=0 --reformat /dev/sdb1
mount.lustre /dev/sdb1 /mnt/mdt
</code></p>

<p>其中<em>fsname</em>为安装的lustre文件系统的标志，在MGS、MDS和OSS中都必须保持一致，在客户端挂在Lustre文件系统时也会使用到这个名字，长度不能超过8个字符；本例中MGS和MDS使用同一个服务器；<em>reformat</em>会对磁盘进行重新格式化处理。</p>

<p>在OSS上创建Lustre文件系统，并挂载：</p>

<p><code>
mkfs.lustre --fsname=mylustre --ost --reformat --index=num --mgsnode=host_mds@o2ib0 /dev/sdb2
mount.lustre /dev/sdb2 /mnt/ost
</code></p>

<p>必须要在MDT的文件系统挂在之后才能挂载OST的文件系统；<em>host_mds</em>为mds的ip地址或者已经写入<em>hosts</em>文件的主机名，<em>o2ib0</em>和<em>lnet.conf</em>中写入的内容保持一致。
如果出现无法连接的情况，则可能是防火墙的原因，可以关闭<em>iptables</em>服务：<code>service iptables stop</code></p>

<p>客户端的挂载：</p>

<p><code>
mount.lustre host_mds@o2ib0:/mylustre /mnt/lustre
</code></p>

<h2 id="section-2">实用工具</h2>
<p>lctl：可以直接在终端运行进入交互的命令方式或者直接输入命令。</p>

<p><code>
lctl network up
lctl list_nids	#可以查看当前实际的ip地址，以确定是否使用了正确的接口
lctl ping nids	#用来检查OSS和MGS连接是否正常
lctl dl		#查看当前的设备
</code></p>

<p>可以通过<em>lfs</em>命令获取已挂载的<em>lustre</em>文件系统信息：</p>

<p><code>
lfs df -h
</code></p>

<p>或者对文件系统的文件写入方式等进行配置：</p>

<p><code>
lfs setstripe -c -1 -S 128M /mnt/lustre/
</code></p>

<p>其中<code>-c -1</code>表示写入到所有的OSS中，<code>-S 128M</code>表示文件分块的大小为128M；上面是对整个文件系统进行设置，也可以单独地对某个文件或者文件夹进行设置；设置完后可以通过如下命令查看配置信息是否正确：</p>

<p><code>
lfs getstripe /mnt/lustre
</code></p>

<h2 id="p-problemc-causer-resolve">遇到的问题及解决方法（P-Problem，C-Cause，R-Resolve）</h2>
<p>P：安装完重启之后，系统无法启动。<br />
C：因为启动分区太小，只有100M大小，而<em>Lustre</em>生成的<em>initramfs</em>太大，大概有65M，最后导致生成的文件不完整，所以无法启动；在<em>lustre-module-version</em>的安装过程中产生，会报文件写入错误。<br />
R：调整分区大小比较困难，也不方便进行批量处理；就不是用单独的启动分区，把<em>grub</em>重新安装到<em>/dev/sda</em>上，卸载启动分区，把内核等文件复制到根文件系统的<em>/boot</em>目录下，修改<em>grub.conf</em>文件，直接通过根文件系统下的<em>/boot</em>目录中的内核进行启动。  </p>

<p>P：安装完Lustre并成功启动后，在执行<em>mount.lustre</em>操作之后，就会断开了ssh连接。<br />
C：主机上提示<em>out of memory</em>提示，并killing一大堆进程，至今没搞明白为什么会出现内存不足的问题，当时机器的配置是2G内存，我在虚拟机中实验时，设置1G的内存，也没有出现这个错误。<br />
R：去除内核参数<em>mem=2048M</em>之后，内存变为了32G，一切就恢复正常了。  </p>

<h2 id="idea">比较有创意的Idea</h2>
<p>需要对<em>/dev/sdb</em>进行分区，就在一台机器上利用<code>fdisk</code>按要求分区后，拷贝出该硬盘前512字节启动分区内容：</p>

<p><code>bash
dd if=/dev/sdb of=boot512.img bs=512 count=1
</code></p>

<p>之后把这个文件写入其他机器的<em>/dev/sdb</em>硬盘，便可完成分区，这样便方便进行批量处理了：</p>

<p><code>
dd if=boot512.img of=/dev/sdb bs=512 count=1
</code></p>

<p>在用<code>fdisk</code>分完区后，在<em>/dev/sdb#</em>中并没有及时地反映出分区后的结果，此时运行<code>partprobe /dev/sdb</code>命令即可。</p>

<h2 id="section-3">参考文献：</h2>
<p><a href="http://xiaolangit.blog.51cto.com/3343422/1195060">51CTO：Lustre-2.3的安装</a></p>
]]></content>
  </entry>
  
</feed>
